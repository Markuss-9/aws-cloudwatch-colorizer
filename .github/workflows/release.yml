on:
    push:
        tags:
            - "*"

name: Release pipeline

jobs:
    build:
        name: Release pipeline
        runs-on: ubuntu-latest
        steps:
            - name: Clone repository
              uses: actions/checkout@v4
            - name: Getting Node.js version from .nvmrc
              run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
              id: nvm
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "${{ steps.nvm.outputs.NVMRC }}"
            - name: Install dependencies
              run: npm install
            - name: Build project # This would actually build your project, using zip for an example artifact
              run: npm run build
            - name: Zip distribution folder
              run: zip aws-cloudwatch-colorize.zip dist -r
            - name: Create Release
              id: create_release
              uses: actions/create-release@v1.1.4
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false
            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1.0.2
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
                  asset_path: ./
                  asset_name: aws-cloudwatch-colorize.zip
                  asset_content_type: application/zip
